{"version":3,"sources":["components/content/index.js","views/app/category/index.js","components/favourite/index.js","components/categoryItem/index.js"],"names":["Content","updateDate","data","url","match","useStore","getState","userFavourites","authUser","user","favourites","userSettingsAdapter","settings","dispatch","useDispatch","useState","setFavourites","baseCurrency","getBase","nameFilter","setNameFilter","handleFavouriteChange","a","value","currentTarget","dataset","newFavourites","indexOf","filter","item","push","type","LOADER","changeFavourites","result","ok","SET_USER_FAVOURITES","payload","date","moment","format","className","placeholder","onChange","toLowerCase","name","includes","map","key","rate","dayChange","difference","differenceInPercent","Category","props","model","setData","setUpdateDate","useEffect","shouldRefresh","setRefresh","GET_CATEGORY_DATA","getAllUrl","base","category","getCategoryName","useSelector","collections","newData","newUpdateDate","JSON","stringify","length","Favourite","handleChange","state","data-value","onClick","CategoryItem","parseFloat","toFixed","differenceCSSClass","to","id"],"mappings":"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","file":"static/js/8.8c1734c2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useStore, useDispatch } from \"react-redux\";\nimport { SET_USER_FAVOURITES, LOADER } from \"../../redux/actions\";\nimport CategoryItem from \"../../components/categoryItem\";\nimport moment from \"moment\";\n\nconst Content = ({ updateDate, data = [], match: { url } }) => {\n    const {\n        authUser: {\n            user: { favourites: userFavourites },\n        },\n        settings: { userSettingsAdapter },\n    } = useStore().getState();\n\n    const dispatch = useDispatch();\n\n    const [favourites, setFavourites] = useState(userFavourites);\n    const baseCurrency = userSettingsAdapter.getBase();\n    const [nameFilter, setNameFilter] = useState(\"\");\n\n    const handleFavouriteChange = async ({\n        currentTarget: {\n            dataset: { value },\n        },\n    }) => {\n        let newFavourites = favourites || [];\n\n        if (newFavourites && newFavourites.indexOf(value) > -1) {\n            newFavourites = newFavourites.filter((item) => item !== value);\n        } else newFavourites.push(value);\n\n        dispatch({ type: LOADER });\n\n        const result = await userSettingsAdapter.changeFavourites(\n            newFavourites\n        );\n\n        dispatch({ type: LOADER });\n\n        if (result?.ok) {\n            dispatch({ type: SET_USER_FAVOURITES, payload: newFavourites });\n            setFavourites(newFavourites);\n        }\n    };\n\n    const date = moment(updateDate).format(\"DD.MM.YYYY - HH:mm:ss\");\n\n    return (\n        <div className={\"contentContainer\"}>\n            <h4>Updated: {date}</h4>\n            <div className={\"tableContainer\"}>\n                <div className={\"tableHeaderContainer row w-100 m-auto d-flex\"}>\n                    <span className={\"tableHeader\"} />\n                    <span className={\"tableHeader\"}>\n                        <input\n                            type=\"text\"\n                            placeholder={\"Name 🔍\"}\n                            value={nameFilter}\n                            onChange={({ currentTarget: { value } }) =>\n                                setNameFilter(value.toLowerCase())\n                            }\n                        />\n                    </span>\n                    <span className={\"tableHeader m-auto\"}>Price</span>\n                    <span className={\"tableHeader m-auto\"}>24h</span>\n                    <span className={\"tableHeader\"} />\n                </div>\n                <div className={\"d-flex w-100 m-auto flex-column\"}>\n                    {data\n                        .filter(({ name }) =>\n                            name.toLowerCase().includes(nameFilter)\n                        )\n                        .filter(({ name }) => name !== baseCurrency)\n                        .map(({ name, rate }, key) => (\n                            <CategoryItem\n                                key={key}\n                                name={name}\n                                rate={rate}\n                                dayChange={{\n                                    difference: 0.05,\n                                    differenceInPercent: \"0.5%\",\n                                }}\n                                url={url}\n                                favourites={favourites}\n                                handleFavouriteChange={handleFavouriteChange}\n                            />\n                        ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Content;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport Content from \"../../../components/content\";\nimport { GET_CATEGORY_DATA } from \"../../../redux/actions\";\nimport Loader from \"../../../components/loader\";\n\nconst Category = (props) => {\n    const { model } = props;\n\n    const dispatch = useDispatch();\n    const { settings } = useStore().getState();\n    const [data, setData] = useState(null);\n    const [updateDate, setUpdateDate] = useState(\"\");\n\n    useEffect(() => {\n        if (model?.shouldRefresh()) {\n            model.setRefresh(false);\n            dispatch({\n                type: GET_CATEGORY_DATA,\n                payload: {\n                    url: model.getAllUrl(settings?.base),\n                    category: model.getCategoryName(),\n                },\n            });\n        }\n    }, []);\n\n    useSelector(({ collections }) => {\n        const { data: newData, updateDate: newUpdateDate = \"\" } =\n            collections[model?.getCategoryName()] || {};\n\n        if (JSON.stringify(newData) !== JSON.stringify(data)) {\n            setData(newData);\n        }\n        if (newUpdateDate !== updateDate) {\n            setUpdateDate(newUpdateDate);\n        }\n    });\n\n    return (\n        <div>\n            {model ? (\n                <>\n                    {data !== null ? (\n                        <>\n                            {data?.length > 0 ? (\n                                <Content\n                                    {...props}\n                                    data={data}\n                                    updateDate={updateDate}\n                                />\n                            ) : (\n                                <p>No results..</p>\n                            )}\n                        </>\n                    ) : (\n                        <Loader />\n                    )}\n                </>\n            ) : (\n                <span>working on it..</span>\n            )}\n        </div>\n    );\n};\n\nexport default Category;\n","import React from \"react\";\n\nconst Favourite = ({ handleChange, name, state = false }) => {\n    return (\n        <span className={\"cell\"}>\n            <span className={\"cell\"} data-value={name} onClick={handleChange}>\n                {state ? (\n                    <i className=\"fas fa-star favourite active\" />\n                ) : (\n                    <i className=\"far fa-star favourite\" />\n                )}\n            </span>\n        </span>\n    );\n};\n\nexport default Favourite;\n","import FavouriteComponent from \"../favourite\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nconst CategoryItem = ({\n    handleFavouriteChange,\n    name,\n    favourites,\n    rate,\n    category,\n    dayChange = { difference: 0 },\n    url,\n}) => {\n    const differenceCSSClass = () => {\n        const { difference } = dayChange || {};\n        let result = \"\";\n\n        if (difference === 0) {\n            result = \"equal\";\n        } else if (difference > 0) {\n            result = \"plus\";\n        } else {\n            result = \"minus\";\n        }\n\n        return result;\n    };\n\n    return (\n        <div className={\"categoryItem row w-100 m-auto d-flex\"}>\n            <FavouriteComponent\n                handleChange={handleFavouriteChange}\n                name={name}\n                state={favourites.indexOf(name) > -1}\n            />\n            <span className={\"cell\"}>{name}</span>\n            {category && <span className={\"cell\"}>{category}</span>}\n            <span className={\"cell m-auto\"}>{parseFloat(rate).toFixed(2)}</span>\n            <span className={`cell m-auto difference ${differenceCSSClass()}`}>\n                {dayChange.difference &&\n                    `${dayChange.difference}(${dayChange.differenceInPercent})`}\n            </span>\n            <span className={\"cell actions\"}>\n                <Link to={`${url}`}>\n                    <i className=\"fas fa-info-circle\" />\n                </Link>\n            </span>\n            <div id=\"box\" className=\"box-shadow\"></div>\n        </div>\n    );\n};\n\nexport default CategoryItem;\n"],"sourceRoot":""}