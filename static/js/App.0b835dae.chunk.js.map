{"version":3,"sources":["App.js"],"names":["ViewMain","React","lazy","ViewApp","ViewError","ViewLogin","ViewRegister","AuthRoute","Component","component","authUser","basePath","rest","render","props","to","pathname","state","from","location","App","loginUser","useStore","getState","console","log","className","fallback","path","exact"],"mappings":"8JAWMA,EAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,EAAUF,IAAMC,MAAK,kBAAM,gCAC3BE,EAAYH,IAAMC,MAAK,kBAAM,gCAC7BG,EAAYJ,IAAMC,MAAK,kBAAM,gCAC7BI,EAAeL,IAAMC,MAAK,kBAAM,gCAEhCK,EAAY,SAAC,GAA2D,IAA9CC,EAA6C,EAAxDC,UAAsBC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,SAAaC,EAAW,mDACzE,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAACC,GAAD,OACJJ,EACI,kBAACF,EAAcM,GAEf,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAS,GAAD,OAAKL,EAAL,UACRM,MAAO,CAAEC,KAAMJ,EAAMK,kBAyDlCC,UAhDH,SAACN,GAAW,IACZO,EAAcP,EAAdO,UAGAV,EADMW,cAAWC,WACEb,SAAnBC,SAIR,OAFAa,QAAQC,IAAI,OAAQd,GAGhB,yBAAKe,UAAU,OACX,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAACpB,EAAD,CACIqB,KAAI,UAAKjB,EAAL,QACJD,SAAUW,EACVZ,UAAWN,EACXQ,SAAUA,IAGd,kBAAC,IAAD,CACIiB,KAAI,UAAKjB,EAAL,KACJkB,OAAK,EACLhB,OAAQ,SAACC,GAAD,OAAW,kBAACd,EAAac,MAErC,kBAAC,IAAD,CACIc,KAAI,UAAKjB,EAAL,UACJkB,OAAK,EACLhB,OAAQ,SAACC,GAAD,OAAW,kBAACT,EAAcS,MAEtC,kBAAC,IAAD,CACIc,KAAI,UAAKjB,EAAL,aACJkB,OAAK,EACLhB,OAAQ,SAACC,GAAD,OAAW,kBAACR,EAAiBQ,MAEzC,kBAAC,IAAD,CACIc,KAAI,UAAKjB,EAAL,UACJkB,OAAK,EACLhB,OAAQ,SAACC,GAAD,OAAW,kBAACV,EAAcU,MAEtC,kBAAC,IAAD,CAAUC,GAAE,UAAKJ,EAAL","file":"static/js/App.0b835dae.chunk.js","sourcesContent":["import React, { Suspense } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\n\nimport Loader from \"./components/loader\";\nimport { useStore } from \"react-redux\";\n\nconst ViewMain = React.lazy(() => import(\"./views\"));\nconst ViewApp = React.lazy(() => import(\"./views/app\"));\nconst ViewError = React.lazy(() => import(\"./views/error\"));\nconst ViewLogin = React.lazy(() => import(\"./views/login\"));\nconst ViewRegister = React.lazy(() => import(\"./views/register\"));\n\nconst AuthRoute = ({ component: Component, authUser, basePath, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                authUser ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: `${basePath}/login`,\n                            state: { from: props.location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nconst App = (props) => {\n    const { loginUser } = props;\n\n    const store = useStore().getState();\n    const { basePath } = store.authUser;\n\n    console.log(\">>> \", basePath);\n\n    return (\n        <div className=\"App\">\n            <Suspense fallback={<Loader />}>\n                <Router>\n                    <Switch>\n                        <AuthRoute\n                            path={`${basePath}/app`}\n                            authUser={loginUser}\n                            component={ViewApp}\n                            basePath={basePath}\n                        />\n\n                        <Route\n                            path={`${basePath}/`}\n                            exact\n                            render={(props) => <ViewMain {...props} />}\n                        />\n                        <Route\n                            path={`${basePath}/login`}\n                            exact\n                            render={(props) => <ViewLogin {...props} />}\n                        />\n                        <Route\n                            path={`${basePath}/register`}\n                            exact\n                            render={(props) => <ViewRegister {...props} />}\n                        />\n                        <Route\n                            path={`${basePath}/error`}\n                            exact\n                            render={(props) => <ViewError {...props} />}\n                        />\n                        <Redirect to={`${basePath}/error`} />\n                    </Switch>\n                </Router>\n            </Suspense>\n        </div>\n    );\n};\n\nexport default App;\n"],"sourceRoot":""}