{"version":3,"sources":["components/navbar/index.js","views/app/index.js"],"names":["Navbar","url","match","useStore","getState","menu","items","current","dispatch","useDispatch","className","map","key","label","name","path","onClick","type","MENU_CHANGE","payload","to","length","MainAppView","React","lazy","CurrenciesView","CryptoView","MetalsView","TestComponent","props","Views","authUser","user","fallback","exact","render"],"mappings":"6JAqCeA,EAhCA,SAAC,GAAwB,IAAbC,EAAY,EAArBC,MAASD,IAAY,EAG/BE,cAAWC,WADXC,KAAQC,EAFuB,EAEvBA,MAAOC,EAFgB,EAEhBA,QAGbC,EAAWC,cAEjB,OACI,yBAAKC,UAAW,cACXJ,EAAMK,KAAI,WAAwBC,GAAxB,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAhB,OACP,kBAAC,IAAD,CACIC,QAAS,WACLR,EAAS,CAAES,KAAMC,cAAaC,QAASL,KAE3CF,IAAKA,EACLQ,GAAE,UAAKnB,GAAL,OAAWc,GACbL,UAAS,UAAa,IAARE,EAAA,UAAwB,GAA7B,YACLA,IAAQN,EAAMe,OAAS,EAAvB,UAAuC,GADlC,YAELd,IAAYO,EAAO,cAAgB,GAF9B,MAIRD,MAGT,yBAAKH,UAAW,mBACZ,kBAAC,IAAD,CAASU,GAAE,WACP,uBAAGV,UAAU,4BCxB3BY,EAAcC,IAAMC,MAAK,kBAAM,iCAC/BC,EAAiBF,IAAMC,MAAK,kBAAM,sDAClCE,EAAaH,IAAMC,MAAK,kBAAM,gCAC9BG,EAAaJ,IAAMC,MAAK,kBAAM,iCAE9BI,EAAgB,SAACC,GACnB,OAAO,gDAmDIC,UAhDD,SAACD,GAAW,IAET5B,EACT4B,EADA3B,MAASD,IAKTE,cAAWC,WADX2B,SAAYC,KAGhB,OAEI,yBAAKtB,UAAW,SACZ,kBAAC,EAAWmB,GAEZ,kBAAC,WAAD,CAAUI,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,OAAK,EACLnB,KAAI,UAAKd,EAAL,KACJkC,OAAQ,SAACN,GAAD,OAAW,kBAACP,EAAgBO,MAExC,kBAAC,IAAD,CACIK,OAAK,EACLnB,KAAI,UAAKd,EAAL,eACJkC,OAAQ,SAACN,GAAD,OAAW,kBAACJ,EAAmBI,MAE3C,kBAAC,IAAD,CACIK,OAAK,EACLnB,KAAI,UAAKd,EAAL,WACJkC,OAAQ,SAACN,GAAD,OAAW,kBAACH,EAAeG,MAEvC,kBAAC,IAAD,CACIK,OAAK,EACLnB,KAAI,UAAKd,EAAL,WACJkC,OAAQ,SAACN,GAAD,OAAW,kBAACF,EAAeE,MAEvC,kBAAC,IAAD,CACIK,OAAK,EACLnB,KAAI,UAAKd,EAAL,mBACJkC,OAAQ,SAACN,GAAD,OAAW,kBAAC,EAAkBA,MAE1C,kBAAC,IAAD,CAAUT,GAAG","file":"static/js/9.ee1ba142.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport { useStore, useDispatch } from \"react-redux\";\nimport { MENU_CHANGE } from \"../../redux/actions\";\n\nconst Navbar = ({ match: { url } }) => {\n    const {\n        menu: { items, current },\n    } = useStore().getState();\n\n    const dispatch = useDispatch();\n\n    return (\n        <nav className={\"navigation\"}>\n            {items.map(({ label, name, path }, key) => (\n                <NavLink\n                    onClick={() => {\n                        dispatch({ type: MENU_CHANGE, payload: name });\n                    }}\n                    key={key}\n                    to={`${url}${path}`}\n                    className={`${key === 0 ? `ml-auto` : \"\"} ${\n                        key === items.length - 1 ? `mr-auto` : \"\"\n                    } ${current === name ? \"activeClass\" : \"\"} `}\n                >\n                    {label}\n                </NavLink>\n            ))}\n            <div className={\"logoutContainer\"}>\n                <NavLink to={`/logout`}>\n                    <i className=\"fas fa-sign-out-alt\" />\n                </NavLink>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React, { Suspense } from \"react\";\nimport { useStore } from \"react-redux\";\nimport { NavLink, Switch, Route, Redirect } from \"react-router-dom\";\nimport Loader from \"../../components/loader\";\nimport Navbar from \"../../components/navbar\";\n\nconst MainAppView = React.lazy(() => import(\"./main\"));\nconst CurrenciesView = React.lazy(() => import(\"./currencies\"));\nconst CryptoView = React.lazy(() => import(\"./crypto\"));\nconst MetalsView = React.lazy(() => import(\"./metals\"));\n\nconst TestComponent = (props) => {\n    return <div>some data here</div>;\n};\n\nconst Views = (props) => {\n    const {\n        match: { url },\n    } = props;\n\n    const {\n        authUser: { user },\n    } = useStore().getState();\n\n    return (\n        // @todo optimize routing and clean components\n        <div className={\"views\"}>\n            <Navbar {...props} />\n\n            <Suspense fallback={<Loader />}>\n                <Switch>\n                    <Route\n                        exact\n                        path={`${url}/`}\n                        render={(props) => <MainAppView {...props} />}\n                    />\n                    <Route\n                        exact\n                        path={`${url}/currencies`}\n                        render={(props) => <CurrenciesView {...props} />}\n                    />\n                    <Route\n                        exact\n                        path={`${url}/crypto`}\n                        render={(props) => <CryptoView {...props} />}\n                    />\n                    <Route\n                        exact\n                        path={`${url}/metals`}\n                        render={(props) => <MetalsView {...props} />}\n                    />\n                    <Route\n                        exact\n                        path={`${url}/currencies/:id`}\n                        render={(props) => <TestComponent {...props} />}\n                    />\n                    <Redirect to=\"/error\" />\n                </Switch>\n            </Suspense>\n        </div>\n    );\n};\n\nexport default Views;\n"],"sourceRoot":""}