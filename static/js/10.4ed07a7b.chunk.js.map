{"version":3,"sources":["App.js"],"names":["ViewWelcome","React","lazy","ViewApp","ViewError","ViewLogin","ViewLogout","ViewRegister","AuthRoute","Component","component","authUser","rest","render","props","to","pathname","state","from","location","connect","loader","user","init","newLoader","useState","setLoader","dispatch","useDispatch","useEffect","id","type","GET_USER_DATA","payload","url","JSON","stringify","_id","SET_INIT","undefined","className","fallback","basename","path","email","exact"],"mappings":"iPAaMA,EAAcC,IAAMC,MAAK,kBAAM,iCAC/BC,EAAUF,IAAMC,MAAK,kBAAM,wDAC3BE,EAAYH,IAAMC,MAAK,kBAAM,iCAC7BG,EAAYJ,IAAMC,MAAK,kBAAM,uDAC7BI,EAAaL,IAAMC,MAAK,kBAAM,kCAC9BK,EAAeN,IAAMC,MAAK,kBAAM,wDAEhCM,EAAY,SAAC,GAAiD,IAApCC,EAAmC,EAA9CC,UAAsBC,EAAwB,EAAxBA,SAAaC,EAAW,iBAC/D,OACI,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAACC,GAAD,OACJH,EACI,cAACF,EAAD,eAAeK,IAEf,cAAC,IAAD,CACIC,GAAI,CACAC,SAAS,SACTC,MAAO,CAAEC,KAAMJ,EAAMK,kBAwFlCC,uBAPS,SAAC,GAA0B,IAAxBT,EAAuB,EAAvBA,SAAUU,EAAa,EAAbA,OAGjC,MAAO,CAAEC,KAFcX,EAAfW,KAEOC,KAFQZ,EAATY,KAEOC,UAAWH,KAEV,GAEXD,EA/EH,SAACN,GACT,IAAQQ,EAA0BR,EAA1BQ,KAAMC,EAAoBT,EAApBS,KAAMC,EAAcV,EAAdU,UACpB,EAA4BC,oBAAS,GAArC,mBAAOJ,EAAP,KAAeK,EAAf,KAEMC,EAAWC,cAuBjB,OArBAC,qBAAU,WACFN,IACID,EAAKQ,IACLH,EAAS,CACLI,KAAMC,IACNC,QAAS,CACLC,IAAI,iBAAD,OAAmBC,KAAKC,UAAU,CACjCC,IAAKf,EAAKQ,SAK1BH,EAAS,CACLI,KAAMO,IACNL,SAAS,OAGlB,CAACV,EAAMD,SAEQiB,IAAdf,GAA2BA,IAAcH,GAAQK,EAAUF,GAG3D,sBAAKgB,UAAU,MAAf,UACI,cAAC,IAAD,IACCnB,GAAU,cAAC,IAAD,IACX,cAAC,WAAD,CAAUoB,SAAU,cAAC,IAAD,IAApB,SACI,cAAC,IAAD,CAAQC,SAAS,yBAAjB,SACI,eAAC,IAAD,WACI,cAAClC,EAAD,CACImC,KAAI,OACJhC,SAAQ,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAMsB,MAChBlC,UAAWP,IAEf,cAAC,IAAD,CACI0C,OAAK,EACLF,KAAI,SACJ9B,OAAQ,SAACC,GAAD,OAAW,cAACT,EAAD,eAAeS,OAEtC,cAAC,IAAD,CACI6B,KAAI,UACJE,OAAK,EACLhC,OAAQ,SAACC,GAAD,OAAW,cAACR,EAAD,eAAgBQ,OAEvC,cAAC,IAAD,CACI6B,KAAI,YACJE,OAAK,EACLhC,OAAQ,SAACC,GAAD,OAAW,cAACP,EAAD,eAAkBO,OAEzC,cAAC,IAAD,CACI6B,KAAI,SACJE,OAAK,EACLhC,OAAQ,SAACC,GAAD,OAAW,cAACV,EAAD,eAAeU,OAEtC,cAAC,IAAD,CACI6B,KAAI,IACJE,OAAK,EACLhC,OAAQ,SAACC,GAAD,OAAW,cAACd,EAAD,eAAiBc,OAExC,cAAC,IAAD,CAAUC,GAAE","file":"static/js/10.4ed07a7b.chunk.js","sourcesContent":["import React, { Suspense, useEffect, useState } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport \"react-notifications-component/dist/theme.css\";\nimport ReactNotification from \"react-notifications-component\";\nimport Loader from \"./components/loader\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { SET_INIT, GET_USER_DATA } from \"./redux/actions\";\n\nconst ViewWelcome = React.lazy(() => import(\"./views\"));\nconst ViewApp = React.lazy(() => import(\"./views/app\"));\nconst ViewError = React.lazy(() => import(\"./views/error\"));\nconst ViewLogin = React.lazy(() => import(\"./views/login\"));\nconst ViewLogout = React.lazy(() => import(\"./views/logout\"));\nconst ViewRegister = React.lazy(() => import(\"./views/register\"));\n\nconst AuthRoute = ({ component: Component, authUser, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                authUser ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: `/login`,\n                            state: { from: props.location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nconst App = (props) => {\n    const { user, init, newLoader } = props;\n    const [loader, setLoader] = useState(false);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (init) {\n            if (user.id) {\n                dispatch({\n                    type: GET_USER_DATA,\n                    payload: {\n                        url: `/users?filter=${JSON.stringify({\n                            _id: user.id,\n                        })}`,\n                    },\n                });\n            }\n            dispatch({\n                type: SET_INIT,\n                payload: false,\n            });\n        }\n    }, [init, user]);\n\n    if (newLoader !== undefined && newLoader !== loader) setLoader(newLoader);\n\n    return (\n        <div className=\"App\">\n            <ReactNotification />\n            {loader && <Loader />}\n            <Suspense fallback={<Loader />}>\n                <Router basename=\"/investorWallet-client\">\n                    <Switch>\n                        <AuthRoute\n                            path={`/app`}\n                            authUser={user?.email}\n                            component={ViewApp}\n                        />\n                        <Route\n                            exact\n                            path={`/login`}\n                            render={(props) => <ViewLogin {...props} />}\n                        />\n                        <Route\n                            path={`/logout`}\n                            exact\n                            render={(props) => <ViewLogout {...props} />}\n                        />\n                        <Route\n                            path={`/register`}\n                            exact\n                            render={(props) => <ViewRegister {...props} />}\n                        />\n                        <Route\n                            path={`/error`}\n                            exact\n                            render={(props) => <ViewError {...props} />}\n                        />\n                        <Route\n                            path={`/`}\n                            exact\n                            render={(props) => <ViewWelcome {...props} />}\n                        />\n                        <Redirect to={`/error`} />\n                    </Switch>\n                </Router>\n            </Suspense>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ authUser, loader }) => {\n    const { user, init } = authUser;\n\n    return { user, init, newLoader: loader };\n};\nconst mapActionsToProps = {};\n\nexport default connect(mapStateToProps, mapActionsToProps)(App);\n"],"sourceRoot":""}