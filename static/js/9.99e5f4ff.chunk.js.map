{"version":3,"sources":["views/app/main/index.js","components/favourite/index.js","components/categoryItem/index.js"],"names":["MainAppView","url","match","useStore","getState","userFavourites","authUser","user","favourites","userSettingsAdapter","settings","dispatch","useDispatch","useState","setFavourites","favouritesRates","setFavouritesRates","nameFilter","setNameFilter","useSelector","collections","base","foundRates","categories","forEach","item","el","found","data","find","name","push","length","initFlag","type","SET_INIT_FLAG","model","GET_CATEGORY_DATA","payload","getAllUrl","category","getCategoryName","JSON","stringify","handleFavouriteChange","a","value","currentTarget","dataset","newFavourites","LOADER","indexOf","filter","changeFavourites","result","ok","SET_USER_FAVOURITES","className","placeholder","onChange","toLowerCase","includes","map","key","rate","Favourite","handleChange","state","data-value","onClick","CategoryItem","dayChange","difference","parseFloat","toFixed","differenceCSSClass","differenceInPercent","to","id"],"mappings":"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","file":"static/js/9.99e5f4ff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useStore, useSelector } from \"react-redux\";\nimport CategoryItem from \"../../../components/categoryItem\";\nimport {\n    GET_CATEGORY_DATA,\n    SET_INIT_FLAG,\n    SET_USER_FAVOURITES,\n    LOADER,\n} from \"../../../redux/actions\";\n\nconst MainAppView = ({ match: { url } }) => {\n    const {\n        authUser: {\n            user: { favourites: userFavourites },\n        },\n        settings: { userSettingsAdapter },\n    } = useStore().getState();\n\n    const dispatch = useDispatch();\n\n    const [favourites, setFavourites] = useState(userFavourites);\n    const [favouritesRates, setFavouritesRates] = useState([]);\n    const [nameFilter, setNameFilter] = useState(\"\");\n\n    useSelector(({ collections, settings: { base } }) => {\n        const foundRates = [];\n\n        collections.categories.forEach((item) => {\n            favourites.forEach((el) => {\n                const found = collections[item]?.data?.find(\n                    ({ name }) => name === el\n                );\n\n                if (found) {\n                    foundRates.push(found);\n                }\n            });\n        });\n\n        if (\n            favourites.length > 0 &&\n            favourites.length !== foundRates.length &&\n            !collections.initFlag\n        ) {\n            dispatch({\n                type: SET_INIT_FLAG,\n            });\n\n            collections.categories.forEach((item) => {\n                const model = collections[item]?.model;\n\n                dispatch({\n                    type: GET_CATEGORY_DATA,\n                    payload: {\n                        url: model.getAllUrl(base),\n                        category: model.getCategoryName(),\n                    },\n                });\n            });\n        }\n\n        if (JSON.stringify(foundRates) !== JSON.stringify(favouritesRates)) {\n            setFavouritesRates(foundRates);\n        }\n    });\n\n    const handleFavouriteChange = async ({\n        currentTarget: {\n            dataset: { value },\n        },\n    }) => {\n        let newFavourites = favourites || [];\n\n        dispatch({ type: LOADER });\n\n        if (newFavourites && newFavourites.indexOf(value) > -1) {\n            newFavourites = newFavourites.filter((item) => item !== value);\n        } else newFavourites.push(value);\n\n        const result = await userSettingsAdapter.changeFavourites(\n            newFavourites\n        );\n\n        dispatch({ type: LOADER });\n        if (result?.ok) {\n            dispatch({ type: SET_USER_FAVOURITES, payload: newFavourites });\n            setFavourites(newFavourites);\n        }\n    };\n\n    return (\n        <div>\n            <div className={\"contentContainer\"}>\n                <h4>Favourites:</h4>\n                {favourites.length > 0 ? (\n                    <div className={\"tableContainer\"}>\n                        <div\n                            className={\n                                \"tableHeaderContainer row w-100 m-auto d-flex\"\n                            }\n                        >\n                            <span className={\"tableHeader fixWidth\"} />\n                            <span className={\"tableHeader\"}>\n                                {\" \"}\n                                <input\n                                    type=\"text\"\n                                    placeholder={\"Name 🔍\"}\n                                    value={nameFilter}\n                                    onChange={({ currentTarget: { value } }) =>\n                                        setNameFilter(value.toLowerCase())\n                                    }\n                                />\n                            </span>\n                            <span className={\"tableHeader m-auto\"}>\n                                Last Price\n                            </span>\n                            <span className={\"tableHeader m-auto\"}>24h</span>\n                            <span className={\"tableHeader fixWidth\"} />\n                        </div>\n                        <div className={\"d-flex w-100 m-auto flex-column\"}>\n                            {favouritesRates\n                                .filter(({ name }) =>\n                                    name.toLowerCase().includes(nameFilter)\n                                )\n                                .map(({ name: item, rate, category }, key) => (\n                                    <CategoryItem\n                                        key={key}\n                                        name={item}\n                                        category={category}\n                                        rate={rate}\n                                        url={url}\n                                        favourites={favourites}\n                                        handleFavouriteChange={\n                                            handleFavouriteChange\n                                        }\n                                    />\n                                ))}\n                        </div>\n                    </div>\n                ) : (\n                    <p>No results...</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MainAppView;\n","import React from \"react\";\n\nconst Favourite = ({ handleChange, name, state = false }) => {\n    return (\n        <span className={\"cell\"}>\n            <span className={\"cell\"} data-value={name} onClick={handleChange}>\n                {state ? (\n                    <i className=\"fas fa-star favourite active\" />\n                ) : (\n                    <i className=\"far fa-star favourite\" />\n                )}\n            </span>\n        </span>\n    );\n};\n\nexport default Favourite;\n","import FavouriteComponent from \"../favourite\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nconst CategoryItem = ({\n    handleFavouriteChange,\n    name,\n    favourites,\n    rate,\n    category,\n    dayChange = { difference: 0 },\n    url,\n}) => {\n    const differenceCSSClass = () => {\n        const { difference } = dayChange || {};\n        let result = \"\";\n\n        if (difference === 0) {\n            result = \"equal\";\n        } else if (difference > 0) {\n            result = \"plus\";\n        } else {\n            result = \"minus\";\n        }\n\n        return result;\n    };\n\n    return (\n        <div className={\"categoryItem row w-100 m-auto d-flex\"}>\n            <FavouriteComponent\n                handleChange={handleFavouriteChange}\n                name={name}\n                state={favourites.indexOf(name) > -1}\n            />\n            <span className={\"cell\"}>{name}</span>\n            {category && <span className={\"cell\"}>{category}</span>}\n            <span className={\"cell m-auto\"}>{parseFloat(rate).toFixed(2)}</span>\n            <span className={`cell m-auto difference ${differenceCSSClass()}`}>\n                {dayChange.difference &&\n                    `${dayChange.difference}(${dayChange.differenceInPercent})`}\n            </span>\n            <span className={\"cell actions\"}>\n                <Link to={`${url}`}>\n                    <i className=\"fas fa-info-circle\" />\n                </Link>\n            </span>\n            <div id=\"box\" className=\"box-shadow\"></div>\n        </div>\n    );\n};\n\nexport default CategoryItem;\n"],"sourceRoot":""}