{"version":3,"sources":["App.js"],"names":["ViewWelcome","React","lazy","ViewApp","ViewError","ViewLogin","ViewLogout","ViewRegister","AuthRoute","Component","component","authUser","basePath","rest","render","props","to","pathname","state","from","location","App","useStore","getState","useState","setState","useSelector","user","className","fallback","path","exact"],"mappings":"sKAWMA,EAAcC,IAAMC,MAAK,kBAAM,gCAC/BC,EAAUF,IAAMC,MAAK,kBAAM,gCAC3BE,EAAYH,IAAMC,MAAK,kBAAM,gCAC7BG,EAAYJ,IAAMC,MAAK,kBAAM,sDAC7BI,EAAaL,IAAMC,MAAK,kBAAM,iCAC9BK,EAAeN,IAAMC,MAAK,kBAAM,iCAEhCM,EAAY,SAAC,GAA2D,IAA9CC,EAA6C,EAAxDC,UAAsBC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,SAAaC,EAAW,mDACzE,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAACC,GAAD,OACJJ,EACI,kBAACF,EAAcM,GAEf,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAS,GAAD,OAAKL,EAAL,UACRM,MAAO,CAAEC,KAAMJ,EAAMK,kBA+DlCC,UAtDH,WACR,IACQT,EADMU,cAAWC,WACEZ,SAAnBC,SAFM,EAGYY,qBAHZ,mBAGPN,EAHO,KAGAO,EAHA,KASd,OAJAC,aAAY,YAA6B,IAAdC,EAAa,EAAzBhB,SAAYgB,KACnBA,KAAQ,OAACT,QAAD,IAACA,OAAD,EAACA,EAAOS,OAAMF,EAAS,CAAEE,YAIrC,yBAAKC,UAAU,OACX,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAACrB,EAAD,CACIsB,KAAI,UAAKlB,EAAL,QACJD,SAAQ,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAOS,KACjBjB,UAAWP,EACXS,SAAUA,IAGd,kBAAC,IAAD,CACIkB,KAAI,UAAKlB,EAAL,KACJmB,OAAK,EACLjB,OAAQ,SAACC,GAAD,OAAW,kBAACf,EAAgBe,MAExC,kBAAC,IAAD,CACIe,KAAI,UAAKlB,EAAL,UACJmB,OAAK,EACLjB,OAAQ,SAACC,GAAD,OAAW,kBAACV,EAAcU,MAEtC,kBAAC,IAAD,CACIe,KAAI,UAAKlB,EAAL,WACJmB,OAAK,EACLjB,OAAQ,SAACC,GAAD,OAAW,kBAACT,EAAeS,MAEvC,kBAAC,IAAD,CACIe,KAAI,UAAKlB,EAAL,aACJmB,OAAK,EACLjB,OAAQ,SAACC,GAAD,OAAW,kBAACR,EAAiBQ,MAEzC,kBAAC,IAAD,CACIe,KAAI,UAAKlB,EAAL,UACJmB,OAAK,EACLjB,OAAQ,SAACC,GAAD,OAAW,kBAACX,EAAcW,MAEtC,kBAAC,IAAD,CAAUC,GAAE,UAAKJ,EAAL","file":"static/js/App.78c9fbe7.chunk.js","sourcesContent":["import React, { Suspense, useState } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\n\nimport Loader from \"./components/loader\";\nimport { useStore, useSelector } from \"react-redux\";\n\nconst ViewWelcome = React.lazy(() => import(\"./views\"));\nconst ViewApp = React.lazy(() => import(\"./views/app\"));\nconst ViewError = React.lazy(() => import(\"./views/error\"));\nconst ViewLogin = React.lazy(() => import(\"./views/login\"));\nconst ViewLogout = React.lazy(() => import(\"./views/logout\"));\nconst ViewRegister = React.lazy(() => import(\"./views/register\"));\n\nconst AuthRoute = ({ component: Component, authUser, basePath, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                authUser ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: `${basePath}/login`,\n                            state: { from: props.location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nconst App = () => {\n    const store = useStore().getState();\n    const { basePath } = store.authUser;\n    const [state, setState] = useState();\n\n    useSelector(({ authUser: { user } }) => {\n        if (user && !state?.user) setState({ user });\n    });\n\n    return (\n        <div className=\"App\">\n            <Suspense fallback={<Loader />}>\n                <Router>\n                    <Switch>\n                        <AuthRoute\n                            path={`${basePath}/app`}\n                            authUser={state?.user}\n                            component={ViewApp}\n                            basePath={basePath}\n                        />\n\n                        <Route\n                            path={`${basePath}/`}\n                            exact\n                            render={(props) => <ViewWelcome {...props} />}\n                        />\n                        <Route\n                            path={`${basePath}/login`}\n                            exact\n                            render={(props) => <ViewLogin {...props} />}\n                        />\n                        <Route\n                            path={`${basePath}/logout`}\n                            exact\n                            render={(props) => <ViewLogout {...props} />}\n                        />\n                        <Route\n                            path={`${basePath}/register`}\n                            exact\n                            render={(props) => <ViewRegister {...props} />}\n                        />\n                        <Route\n                            path={`${basePath}/error`}\n                            exact\n                            render={(props) => <ViewError {...props} />}\n                        />\n                        <Redirect to={`${basePath}/error`} />\n                    </Switch>\n                </Router>\n            </Suspense>\n        </div>\n    );\n};\n\nexport default App;\n"],"sourceRoot":""}