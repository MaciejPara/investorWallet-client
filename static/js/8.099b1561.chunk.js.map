{"version":3,"sources":["components/navbar/index.js","views/app/index.js"],"names":["Navbar","url","match","useStore","getState","menu","items","current","dispatch","useDispatch","className","map","key","label","name","path","onClick","type","MENU_CHANGE","payload","to","length","MainAppView","React","lazy","CategoryComponent","Views","props","collections","authUser","user","fallback","exact","render","categories","item","model"],"mappings":"6JAqCeA,EAhCA,SAAC,GAAwB,IAAbC,EAAY,EAArBC,MAASD,IAAY,EAG/BE,cAAWC,WADXC,KAAQC,EAFuB,EAEvBA,MAAOC,EAFgB,EAEhBA,QAGbC,EAAWC,cAEjB,OACI,yBAAKC,UAAW,cACXJ,EAAMK,KAAI,WAAwBC,GAAxB,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAhB,OACP,kBAAC,IAAD,CACIC,QAAS,WACLR,EAAS,CAAES,KAAMC,cAAaC,QAASL,KAE3CF,IAAKA,EACLQ,GAAE,UAAKnB,GAAL,OAAWc,GACbL,UAAS,UAAa,IAARE,EAAA,UAAwB,GAA7B,YACLA,IAAQN,EAAMe,OAAS,EAAvB,UAAuC,GADlC,YAELd,IAAYO,EAAO,cAAgB,GAF9B,MAIRD,MAGT,yBAAKH,UAAW,mBACZ,kBAAC,IAAD,CAASU,GAAE,WACP,uBAAGV,UAAU,4BCxB3BY,EAAcC,IAAMC,MAAK,kBAAM,gCAC/BC,EAAoBF,IAAMC,MAAK,kBAAM,sDA8C5BE,UA5CD,SAACC,GAAW,IAET1B,EACT0B,EADAzB,MAASD,IAFQ,EAQjBE,cAAWC,WADXwB,GAPiB,EAMjBC,SAAYC,KANK,EAOjBF,aAGJ,OACI,yBAAKlB,UAAW,SACZ,kBAAC,EAAWiB,GACZ,yBAAKjB,UAAW,sBACZ,4CAGJ,kBAAC,WAAD,CAAUqB,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,OAAK,EACLjB,KAAI,UAAKd,EAAL,KACJgC,OAAQ,SAACN,GAAD,OAAW,kBAACL,EAAgBK,MAJ5C,OAMKC,QANL,IAMKA,OANL,EAMKA,EAAaM,WAAWvB,KAAI,SAACwB,EAAMvB,GAAP,OACzB,kBAAC,IAAD,CACIA,IAAKA,EACLoB,OAAK,EACLjB,KAAI,UAAKd,EAAL,YAAYkC,GAChBF,OAAQ,SAACN,GAAD,aACJ,kBAACF,EAAD,iBACQE,EADR,CAEIS,MAAK,UAAER,EAAYO,UAAd,aAAE,EAAmBC,eAK1C,kBAAC,IAAD,CAAUhB,GAAG","file":"static/js/8.099b1561.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport { useStore, useDispatch } from \"react-redux\";\nimport { MENU_CHANGE } from \"../../redux/actions\";\n\nconst Navbar = ({ match: { url } }) => {\n    const {\n        menu: { items, current },\n    } = useStore().getState();\n\n    const dispatch = useDispatch();\n\n    return (\n        <nav className={\"navigation\"}>\n            {items.map(({ label, name, path }, key) => (\n                <NavLink\n                    onClick={() => {\n                        dispatch({ type: MENU_CHANGE, payload: name });\n                    }}\n                    key={key}\n                    to={`${url}${path}`}\n                    className={`${key === 0 ? `ml-auto` : \"\"} ${\n                        key === items.length - 1 ? `mr-auto` : \"\"\n                    } ${current === name ? \"activeClass\" : \"\"} `}\n                >\n                    {label}\n                </NavLink>\n            ))}\n            <div className={\"logoutContainer\"}>\n                <NavLink to={`/logout`}>\n                    <i className=\"fas fa-sign-out-alt\" />\n                </NavLink>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React, { Suspense } from \"react\";\nimport { useStore } from \"react-redux\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Loader from \"../../components/loader\";\nimport Navbar from \"../../components/navbar\";\n\nconst MainAppView = React.lazy(() => import(\"./main\"));\nconst CategoryComponent = React.lazy(() => import(\"./category\"));\n\nconst Views = (props) => {\n    const {\n        match: { url },\n    } = props;\n\n    const {\n        authUser: { user },\n        collections,\n    } = useStore().getState();\n\n    return (\n        <div className={\"views\"}>\n            <Navbar {...props} />\n            <div className={\"userSettingsFooter\"}>\n                <span>base: PLN</span>\n            </div>\n\n            <Suspense fallback={<Loader />}>\n                <Switch>\n                    <Route\n                        exact\n                        path={`${url}/`}\n                        render={(props) => <MainAppView {...props} />}\n                    />\n                    {collections?.categories.map((item, key) => (\n                        <Route\n                            key={key}\n                            exact\n                            path={`${url}/${item}`}\n                            render={(props) => (\n                                <CategoryComponent\n                                    {...props}\n                                    model={collections[item]?.model}\n                                />\n                            )}\n                        />\n                    ))}\n                    <Redirect to=\"/error\" />\n                </Switch>\n            </Suspense>\n        </div>\n    );\n};\n\nexport default Views;\n"],"sourceRoot":""}