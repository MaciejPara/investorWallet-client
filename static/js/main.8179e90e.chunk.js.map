{"version":3,"sources":["utils/FetchClient.js","utils/Messages.js","redux/collections/actions.js","img/loader.gif","components/loader/index.js","redux/settings/actions.js","redux/auth/actions.js","redux/actions.js","serviceWorker.js","redux/auth/reducer.js","utils/Model.js","redux/collections/index.js","redux/collections/reducer.js","redux/menu/reducer.js","utils/UserSettings.js","redux/settings/reducer.js","redux/reducers.js","redux/loader/reducer.js","redux/auth/saga.js","redux/collections/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["FetchClient","apiUrl","_url","_config","headers","credentials","a","url","fetch","this","method","response","json","body","JSON","stringify","status","_showUnauthorized","_showInternalServerError","_showEmailAlreadyExists","store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","GET_CATEGORY_DATA","SET_DATA","SET_INIT_FLAG","SET_UPDATE_DATE","Loader","className","src","loaderGif","alt","SET_SETTINGS","LOGIN_USER","LOGOUT_USER","SET_INIT","SET_USER_FAVOURITES","GET_USER_DATA","SET_USER","MENU_CHANGE","LOADER","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","INIT_STATE","user","parse","localStorage","getItem","init","Model","name","plural","sort","categoryName","_name","_plural","_fetchPending","_data","_sort","_categoryName","_shouldRefresh","_baseUrl","base","createdAt","currencies","model","data","crypto","metals","stocks","categories","initFlag","collections","menuItems","label","path","items","current","pathname","currentPath","forEach","indexOf","findCurrentPath","UserSettings","props","_options","id","setItem","update","favourites","options","settings","userSettingsAdapter","UserSettingsAdapter","baseOptions","value","reducers","combineReducers","authUser","payload","undefined","category","updateDate","menu","action","loader","watchUserGet","rootSaga","takeEvery","get","_id","put","all","watchInitializeCollections","result","rates","fork","getState","authSagas","collectionsSagas","sagaMiddleware","createSagaMiddleware","middlewares","App","React","lazy","ReactDOM","render","StrictMode","initialState","createStore","compose","applyMiddleware","run","sagas","configureStore","fallback","document","getElementById","URL","process","href","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8179e90e.chunk.js","sourcesContent":["import Messages from \"./Messages\";\n\nclass FetchClient extends Messages {\n    constructor({ apiUrl }) {\n        super();\n\n        this._url = apiUrl;\n        this._config = {\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": true,\n                \"Access-Control-Allow-Credentials\": true,\n            },\n            credentials: \"include\",\n        };\n    }\n\n    async get({ url }) {\n        const response = await fetch(`${this._url}${url}`, {\n            ...this._config,\n            method: \"get\",\n        });\n        return await response.json();\n    }\n\n    async post({ url, body }) {\n        const response = await fetch(`${this._url}${url}`, {\n            ...this._config,\n            method: \"post\",\n            body: JSON.stringify(body),\n        });\n\n        if (response?.status === 401) return this._showUnauthorized();\n        if (response?.status === 500) return this._showInternalServerError();\n        if (response?.status === 409) return this._showEmailAlreadyExists();\n\n        return await response.json();\n    }\n\n    async update({ url, body }) {\n        const response = await fetch(`${this._url}${url}`, {\n            ...this._config,\n            method: \"PATCH\",\n            body: JSON.stringify(body),\n        });\n\n        if (response?.status === 401) return this._showUnauthorized();\n        if (response?.status === 500) return this._showInternalServerError();\n\n        return await response.json();\n    }\n\n    async delete({ url }) {\n        const response = await fetch(`${this._url}${url}`, {\n            ...this._config,\n            method: \"delete\",\n        });\n        return await response.json();\n    }\n}\n\nexport default new FetchClient({\n    apiUrl:\n        process.env.NODE_ENV === \"development\"\n            ? \"http://localhost:8080\"\n            : \"https://investor-wallet.herokuapp.com\",\n});\n","import { store } from \"react-notifications-component\";\n\nclass Messages {\n    _showUnauthorized() {\n        store.addNotification({\n            title: \"Failure\",\n            message: \"Unauthorized - check your e-mail or password.\",\n            type: \"danger\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 4000,\n                onScreen: true,\n            },\n        });\n    }\n\n    _showInternalServerError() {\n        store.addNotification({\n            title: \"Failure\",\n            message: \"Internal server error. Contact with admin.\",\n            type: \"danger\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 4000,\n                onScreen: true,\n            },\n        });\n    }\n\n    _showEmailAlreadyExists() {\n        store.addNotification({\n            title: \"Failure\",\n            message: \"Email already exists.\",\n            type: \"danger\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 4000,\n                onScreen: true,\n            },\n        });\n    }\n}\n\nexport default Messages;\n","export const GET_CATEGORY_DATA = \"GET_CATEGORY_DATA\";\nexport const SET_DATA = \"SET_DATA\";\nexport const SET_INIT_FLAG = \"SET_INIT_FLAG\";\nexport const SET_UPDATE_DATE = \"SET_UPDATE_DATE\";\n","export default __webpack_public_path__ + \"static/media/loader.18339639.gif\";","import loaderGif from \"../../img/loader.gif\";\nimport React from \"react\";\n\nconst Loader = () => (\n    <div className={\"overlay\"}>\n        <img className={\"loader\"} src={loaderGif} alt=\"loader\" />\n    </div>\n);\n\nexport default Loader;\n","export const SET_SETTINGS = \"SET_SETTINGS\";\n","import { LOGIN_USER } from \"../actions\";\n\nexport const loginUser = (user, history) => ({\n    type: LOGIN_USER,\n    payload: { user, history },\n});\n","/* AUTH */\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const SET_INIT = \"SET_INIT\";\nexport const SET_USER_FAVOURITES = \"SET_USER_FAVOURITES\";\nexport const GET_USER_DATA = \"GET_USER_DATA\";\nexport const SET_USER = \"SET_USER\";\n\n/* MENU */\nexport const MENU_CHANGE = \"MENU_CHANGE\";\n\n/* LOADER */\nexport const LOADER = \"LOADER\";\n\nexport * from \"./auth/actions\";\nexport * from \"./collections/actions\";\nexport * from \"./settings/actions\";\nexport * from \"./menu/actions\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import {\n    LOGIN_USER,\n    LOGOUT_USER,\n    SET_USER_FAVOURITES,\n    SET_INIT,\n    SET_USER,\n} from \"../actions\";\n\nconst INIT_STATE = {\n    user: JSON.parse(localStorage.getItem(\"investorWalletUser\") || \"{}\"),\n    init: true,\n};\n\nexport default (state = INIT_STATE, { payload, type }) => {\n    switch (type) {\n        case LOGIN_USER:\n            return {\n                ...state,\n                user: payload.user,\n            };\n        case LOGOUT_USER:\n            return {\n                ...state,\n                user: undefined,\n            };\n        case SET_USER_FAVOURITES:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    favourites: payload,\n                },\n            };\n        case SET_INIT:\n            return {\n                ...state,\n                init: payload,\n            };\n        case SET_USER:\n            return {\n                ...state,\n                user: payload,\n            };\n        default:\n            return { ...state };\n    }\n};\n","class Model {\n    constructor({ name, plural, sort, categoryName }) {\n        this._name = name;\n        this._plural = plural;\n        this._fetchPending = false;\n        this._data = [];\n        this._sort = sort;\n        this._categoryName = categoryName;\n        this._shouldRefresh = true;\n        this._baseUrl = `/${this._plural}`;\n    }\n\n    setRefresh(state = false) {\n        this._shouldRefresh = state;\n    }\n\n    shouldRefresh() {\n        return this._shouldRefresh;\n    }\n\n    getAllUrl(base) {\n        return `${this._baseUrl}?filter=${JSON.stringify({\n            base: base,\n        })}&sort=${JSON.stringify({ createdAt: \"desc\" })}&limit=1`;\n    }\n\n    getCategoryName() {\n        return this._categoryName;\n    }\n\n    getName() {\n        return this._name;\n    }\n\n    getPlural() {\n        return this._plural;\n    }\n}\n\nexport default Model;\n","import Model from \"../../utils/Model\";\n\nexport default {\n    currencies: {\n        model: new Model({\n            name: \"currencyRate\",\n            plural: \"currencyRates\",\n            categoryName: \"currencies\",\n        }),\n        data: [],\n    },\n    crypto: {\n        model: new Model({\n            name: \"cryptoRate\",\n            plural: \"cryptoRates\",\n            categoryName: \"crypto\",\n        }),\n        data: [],\n    },\n    metals: {\n        model: new Model({\n            name: \"metalRate\",\n            plural: \"metalRates\",\n            categoryName: \"metals\",\n        }),\n        data: [],\n    },\n    stocks: {\n        model: new Model({\n            name: \"stockRate\",\n            plural: \"stockRates\",\n            categoryName: \"stocks\",\n        }),\n        data: [],\n    },\n};\n","import { SET_DATA, SET_INIT_FLAG, SET_UPDATE_DATE } from \"../actions\";\nimport collections from \"./index\";\n\nconst INIT_STATE = {\n    categories: [\"currencies\", \"crypto\", \"metals\", \"stocks\"],\n    initFlag: false,\n    ...collections,\n};\n\nexport default (state = INIT_STATE, { type, payload }) => {\n    switch (type) {\n        case SET_DATA: {\n            return {\n                ...state,\n                [payload.category]: {\n                    ...state[payload.category],\n                    data: payload.data,\n                },\n            };\n        }\n        case SET_UPDATE_DATE: {\n            return {\n                ...state,\n                [payload.category]: {\n                    ...state[payload.category],\n                    updateDate: payload.updateDate,\n                },\n            };\n        }\n        case SET_INIT_FLAG: {\n            return {\n                ...state,\n                initFlag: !state.initFlag,\n            };\n        }\n        default:\n            return { ...state };\n    }\n};\n","import { MENU_CHANGE } from \"../actions\";\n\nconst menuItems = [\n    {\n        label: \"Wallet\",\n        name: \"home\",\n        path: \"\",\n    },\n    {\n        label: \"Favourites\",\n        name: \"favourites\",\n        path: \"/favourites\",\n    },\n    {\n        label: \"Currencies\",\n        name: \"currencies\",\n        path: \"/currencies\",\n    },\n    {\n        label: \"Crypto\",\n        name: \"crypto\",\n        path: \"/crypto\",\n    },\n    {\n        label: \"Metals\",\n        name: \"metals\",\n        path: \"/metals\",\n    },\n    {\n        label: \"Stocks\",\n        name: \"stocks\",\n        path: \"/stocks\",\n    },\n];\n\nconst findCurrentPath = () => {\n    const { pathname } = window.location;\n\n    let currentPath = \"home\";\n\n    menuItems.forEach(({ path, name }) => {\n        if (pathname.indexOf(path) > -1) currentPath = name;\n    });\n\n    return currentPath;\n};\n\nconst INIT_STATE = {\n    items: menuItems,\n    current: findCurrentPath(),\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case MENU_CHANGE: {\n            return { ...state, current: action.payload };\n        }\n        default: {\n            return { ...state };\n        }\n    }\n};\n","import FetchClient from \"./FetchClient\";\n\nclass UserSettings {\n    constructor(props) {\n        this._options = props || {};\n        this._baseUrl = \"/user\";\n    }\n    async changeBase(base) {\n        const { id } = this._options;\n\n        localStorage.setItem(\n            \"investorWalletUserSettings\",\n            JSON.stringify({ base })\n        );\n\n        this._options.base = base;\n\n        return await FetchClient.update({\n            url: `${this._baseUrl}/${id}`,\n            body: { \"settings.base\": base },\n        });\n    }\n    async changeFavourites(favourites) {\n        const { id } = this._options;\n\n        return await FetchClient.update({\n            url: `${this._baseUrl}/${id}`,\n            body: { favourites },\n        });\n    }\n\n    setOptions(options) {\n        this._options = { ...this._options, ...options };\n    }\n\n    getBase() {\n        return this._options.base;\n    }\n}\n\nexport default UserSettings;\n","import { SET_SETTINGS } from \"../actions\";\nimport UserSettingsAdapter from \"../../utils/UserSettings\";\n\nconst settings = {\n    ...JSON.parse(localStorage.getItem(\"investorWalletUserSettings\") || \"{}\"),\n};\n\nconst INIT_STATE = {\n    userSettingsAdapter: new UserSettingsAdapter({\n        ...settings,\n        ...JSON.parse(localStorage.getItem(\"investorWalletUser\") || \"{}\"),\n    }),\n    baseOptions: [\n        { value: \"USD\", label: \"USD\" },\n        { value: \"PLN\", label: \"PLN\" },\n    ],\n    ...settings,\n};\n\nexport default (state = INIT_STATE, { type, payload }) => {\n    switch (type) {\n        case SET_SETTINGS: {\n            return {\n                ...state,\n                ...payload,\n            };\n        }\n        default:\n            return { ...state };\n    }\n};\n","import { combineReducers } from \"redux\";\n\nimport authUser from \"./auth/reducer\";\nimport collections from \"./collections/reducer\";\nimport menu from \"./menu/reducer\";\nimport settings from \"./settings/reducer\";\nimport loader from \"./loader/reducer\";\n\nconst reducers = combineReducers({\n    authUser,\n    collections,\n    menu,\n    settings,\n    loader,\n});\n\nexport default reducers;\n","import { LOADER } from \"../actions\";\n\nconst INIT_STATE = false;\n\nexport default (state = INIT_STATE, { type }) => {\n    switch (type) {\n        case LOADER: {\n            return !state;\n        }\n        default:\n            return state;\n    }\n};\n","import { all, put, takeEvery } from \"redux-saga/effects\";\nimport FetchClient from \"../../utils/FetchClient\";\nimport { GET_USER_DATA, SET_USER } from \"../actions\";\n\nexport function* watchUserGet() {\n    yield takeEvery(GET_USER_DATA, init);\n}\n\nexport function* init({ payload: { url } }) {\n    try {\n        const user = yield FetchClient.get({ url });\n\n        user.id = user._id;\n        delete user._id;\n\n        yield put({\n            type: SET_USER,\n            payload: (user && user[0]) || null,\n        });\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([watchUserGet()]);\n}\n","import { put, all, fork, takeEvery } from \"redux-saga/effects\";\nimport { GET_CATEGORY_DATA, SET_DATA, SET_UPDATE_DATE } from \"./actions\";\nimport FetchClient from \"../../utils/FetchClient\";\n\nexport function* watchInitializeCollections() {\n    yield takeEvery(GET_CATEGORY_DATA, init);\n}\n\nexport function* init({ payload: { url, category } }) {\n    const [result] = yield FetchClient.get({ url });\n    const { rates, createdAt } = result || {};\n\n    yield put({\n        type: SET_DATA,\n        payload: {\n            category,\n            data: rates, //@todo optimize !!!\n        },\n    });\n\n    yield put({\n        type: SET_UPDATE_DATE,\n        payload: {\n            category,\n            updateDate: createdAt, //@todo optimize !!!\n        },\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchInitializeCollections)]);\n}\n","import { all } from \"redux-saga/effects\";\nimport authSagas from \"./auth/saga\";\nimport collectionsSagas from \"./collections/saga\";\n\nexport default function* rootSaga(getState) {\n    yield all([authSagas(), collectionsSagas()]);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./reducers\";\nimport sagas from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState) {\n    const store = createStore(\n        reducers,\n        initialState,\n        compose(applyMiddleware(...middlewares))\n    );\n\n    sagaMiddleware.run(sagas);\n\n    if (module.hot) {\n        module.hot.accept(\"./reducers\", () => {\n            const nextRootReducer = require(\"./reducers\");\n            store.replaceReducer(nextRootReducer);\n        });\n    }\n\n    return store;\n}\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Loader from \"./components/loader\";\nimport { configureStore } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst App = React.lazy(() => import(\"./App\"));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={configureStore()}>\n            <Suspense fallback={<Loader />}>\n                <App />\n            </Suspense>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}