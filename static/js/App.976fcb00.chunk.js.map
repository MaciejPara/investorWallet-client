{"version":3,"sources":["App.js"],"names":["ViewMain","React","lazy","ViewApp","ViewError","ViewLogin","ViewRegister","AuthRoute","Component","component","authUser","rest","render","props","to","pathname","state","from","location","App","loginUser","useStore","getState","className","fallback","path","exact"],"mappings":"8JAWMA,EAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,EAAUF,IAAMC,MAAK,kBAAM,gCAC3BE,EAAYH,IAAMC,MAAK,kBAAM,gCAC7BG,EAAYJ,IAAMC,MAAK,kBAAM,gCAC7BI,EAAeL,IAAMC,MAAK,kBAAM,gCAEhCK,EAAY,SAAC,GAAiD,IAApCC,EAAmC,EAA9CC,UAAsBC,EAAwB,EAAxBA,SAAaC,EAAW,wCAC/D,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAACC,GAAD,OACJH,EACI,kBAACF,EAAcK,GAEf,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAU,SACVC,MAAO,CAAEC,KAAMJ,EAAMK,kBAoDlCC,UA3CH,SAACN,GAAW,IACZO,EAAcP,EAAdO,UAEMC,cAAWC,WAEzB,OACI,yBAAKC,UAAU,OACX,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAACjB,EAAD,CACIkB,KAAK,OACLf,SAAUU,EACVX,UAAWN,IAEf,kBAAC,IAAD,CACIsB,KAAK,IACLC,OAAK,EACLd,OAAQ,SAACC,GAAD,OAAW,kBAACb,EAAaa,MAErC,kBAAC,IAAD,CACIY,KAAK,SACLC,OAAK,EACLd,OAAQ,SAACC,GAAD,OAAW,kBAACR,EAAcQ,MAEtC,kBAAC,IAAD,CACIY,KAAK,YACLC,OAAK,EACLd,OAAQ,SAACC,GAAD,OAAW,kBAACP,EAAiBO,MAEzC,kBAAC,IAAD,CACIY,KAAK,SACLC,OAAK,EACLd,OAAQ,SAACC,GAAD,OAAW,kBAACT,EAAcS,MAEtC,kBAAC,IAAD,CAAUC,GAAG","file":"static/js/App.976fcb00.chunk.js","sourcesContent":["import React, { Suspense } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\n\nimport Loader from \"./components/loader\";\nimport { useStore } from \"react-redux\";\n\nconst ViewMain = React.lazy(() => import(\"./views\"));\nconst ViewApp = React.lazy(() => import(\"./views/app\"));\nconst ViewError = React.lazy(() => import(\"./views/error\"));\nconst ViewLogin = React.lazy(() => import(\"./views/login\"));\nconst ViewRegister = React.lazy(() => import(\"./views/register\"));\n\nconst AuthRoute = ({ component: Component, authUser, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                authUser ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: props.location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nconst App = (props) => {\n    const { loginUser } = props;\n\n    const store = useStore().getState();\n\n    return (\n        <div className=\"App\">\n            <Suspense fallback={<Loader />}>\n                <Router>\n                    <Switch>\n                        <AuthRoute\n                            path=\"/app\"\n                            authUser={loginUser}\n                            component={ViewApp}\n                        />\n                        <Route\n                            path=\"/\"\n                            exact\n                            render={(props) => <ViewMain {...props} />}\n                        />\n                        <Route\n                            path=\"/login\"\n                            exact\n                            render={(props) => <ViewLogin {...props} />}\n                        />\n                        <Route\n                            path=\"/register\"\n                            exact\n                            render={(props) => <ViewRegister {...props} />}\n                        />\n                        <Route\n                            path=\"/error\"\n                            exact\n                            render={(props) => <ViewError {...props} />}\n                        />\n                        <Redirect to=\"/error\" />\n                    </Switch>\n                </Router>\n            </Suspense>\n        </div>\n    );\n};\n\nexport default App;\n"],"sourceRoot":""}