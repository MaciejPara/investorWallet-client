{"version":3,"sources":["App.js"],"names":["ViewWelcome","React","lazy","ViewApp","ViewError","ViewLogin","ViewLogout","ViewRegister","AuthRoute","Component","component","authUser","rest","render","props","to","pathname","state","from","location","connect","user","className","fallback","basename","path","email","exact"],"mappings":"uLAYMA,EAAcC,IAAMC,MAAK,kBAAM,iCAC/BC,EAAUF,IAAMC,MAAK,kBAAM,gCAC3BE,EAAYH,IAAMC,MAAK,kBAAM,iCAC7BG,EAAYJ,IAAMC,MAAK,kBAAM,uDAC7BI,EAAaL,IAAMC,MAAK,kBAAM,gCAC9BK,EAAeN,IAAMC,MAAK,kBAAM,iCAEhCM,EAAY,SAAC,GAAiD,IAApCC,EAAmC,EAA9CC,UAAsBC,EAAwB,EAAxBA,SAAaC,EAAW,wCAC/D,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAACC,GAAD,OACJH,EACI,kBAACF,EAAcK,GAEf,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAS,SACTC,MAAO,CAAEC,KAAMJ,EAAMK,kBA6DlCC,uBAPS,SAAC,GAGrB,MAAO,CAAEC,KAH6B,EAAfV,SACfU,QAIc,GAEXD,EApDH,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACX,OACI,yBAAKC,UAAU,OACX,kBAAC,IAAD,MACA,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,CAAQC,SAAS,0BACb,kBAAC,IAAD,KACI,kBAAChB,EAAD,CACIiB,KAAI,OACJd,SAAQ,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAMK,MAChBhB,UAAWP,IAEf,kBAAC,IAAD,CACIwB,OAAK,EACLF,KAAI,SACJZ,OAAQ,SAACC,GAAD,OAAW,kBAACT,EAAcS,MAEtC,kBAAC,IAAD,CACIW,KAAI,UACJE,OAAK,EACLd,OAAQ,SAACC,GAAD,OAAW,kBAACR,EAAeQ,MAEvC,kBAAC,IAAD,CACIW,KAAI,YACJE,OAAK,EACLd,OAAQ,SAACC,GAAD,OAAW,kBAACP,EAAiBO,MAEzC,kBAAC,IAAD,CACIW,KAAI,SACJE,OAAK,EACLd,OAAQ,SAACC,GAAD,OAAW,kBAACV,EAAcU,MAEtC,kBAAC,IAAD,CACIW,KAAI,IACJE,OAAK,EACLd,OAAQ,SAACC,GAAD,OAAW,kBAACd,EAAgBc,MAExC,kBAAC,IAAD,CAAUC,GAAE","file":"static/js/App.d76ebc57.chunk.js","sourcesContent":["import React, { Suspense } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport \"react-notifications-component/dist/theme.css\";\nimport ReactNotification from \"react-notifications-component\";\nimport Loader from \"./components/loader\";\nimport { connect } from \"react-redux\";\n\nconst ViewWelcome = React.lazy(() => import(\"./views\"));\nconst ViewApp = React.lazy(() => import(\"./views/app\"));\nconst ViewError = React.lazy(() => import(\"./views/error\"));\nconst ViewLogin = React.lazy(() => import(\"./views/login\"));\nconst ViewLogout = React.lazy(() => import(\"./views/logout\"));\nconst ViewRegister = React.lazy(() => import(\"./views/register\"));\n\nconst AuthRoute = ({ component: Component, authUser, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                authUser ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: `/login`,\n                            state: { from: props.location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nconst App = ({ user }) => {\n    return (\n        <div className=\"App\">\n            <ReactNotification />\n            <Suspense fallback={<Loader />}>\n                <Router basename=\"/investorWallet-client\">\n                    <Switch>\n                        <AuthRoute\n                            path={`/app`}\n                            authUser={user?.email}\n                            component={ViewApp}\n                        />\n                        <Route\n                            exact\n                            path={`/login`}\n                            render={(props) => <ViewLogin {...props} />}\n                        />\n                        <Route\n                            path={`/logout`}\n                            exact\n                            render={(props) => <ViewLogout {...props} />}\n                        />\n                        <Route\n                            path={`/register`}\n                            exact\n                            render={(props) => <ViewRegister {...props} />}\n                        />\n                        <Route\n                            path={`/error`}\n                            exact\n                            render={(props) => <ViewError {...props} />}\n                        />\n                        <Route\n                            path={`/`}\n                            exact\n                            render={(props) => <ViewWelcome {...props} />}\n                        />\n                        <Redirect to={`/error`} />\n                    </Switch>\n                </Router>\n            </Suspense>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ authUser }) => {\n    const { user } = authUser;\n\n    return { user };\n};\nconst mapActionsToProps = {};\n\nexport default connect(mapStateToProps, mapActionsToProps)(App);\n"],"sourceRoot":""}