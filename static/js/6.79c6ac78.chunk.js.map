{"version":3,"sources":["components/favourite/index.js","components/categoryItem/index.js","components/content/index.js","views/app/category/index.js"],"names":["Favourite","handleChange","name","state","className","data-value","onClick","CategoryItem","handleFavouriteChange","favourites","rate","url","indexOf","parseFloat","toFixed","to","Content","data","match","useStore","getState","userFavourites","authUser","user","userSettingsAdapter","settings","dispatch","useDispatch","useState","setFavourites","a","value","currentTarget","dataset","newFavourites","filter","item","push","type","LOADER","changeFavourites","result","ok","SET_USER_FAVOURITES","payload","map","key","Category","props","model","setData","useEffect","shouldRefresh","setRefresh","GET_CATEGORY_DATA","getAllUrl","base","category","getCategoryName","useSelector","newData","collections","JSON","stringify","length"],"mappings":"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","file":"static/js/6.79c6ac78.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Favourite = ({ handleChange, name, state = false }) => {\n    return (\n        <span className={\"cell\"} data-value={name} onClick={handleChange}>\n            {state ? (\n                <i className=\"fas fa-star favourite active\" />\n            ) : (\n                <i className=\"far fa-star favourite\" />\n            )}\n        </span>\n    );\n};\n\nexport default Favourite;\n","import FavouriteComponent from \"../favourite\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nconst CategoryItem = ({\n    handleFavouriteChange,\n    name,\n    favourites,\n    rate,\n    url,\n}) => {\n    return (\n        <div className={\"row w-100 m-auto d-flex\"}>\n            <FavouriteComponent\n                handleChange={handleFavouriteChange}\n                name={name}\n                state={favourites.indexOf(name) > -1}\n            />\n            <span className={\"cell\"}>{name}</span>\n            <span className={\"cell m-auto\"}>\n                {parseFloat(1 / rate).toFixed(2)}\n            </span>\n            <span className={\"cell\"}>\n                <Link to={`${url}`}>\n                    <i className=\"fas fa-ellipsis-h\" />\n                </Link>\n            </span>\n        </div>\n    );\n};\n\nexport default CategoryItem;\n","import React, { useState } from \"react\";\nimport { useStore, useDispatch } from \"react-redux\";\nimport { SET_USER_FAVOURITES, LOADER } from \"../../redux/actions\";\nimport CategoryItem from \"../../components/categoryItem\";\n\nconst Content = ({ data = [], match: { url } }) => {\n    const {\n        authUser: {\n            user: { favourites: userFavourites },\n        },\n        settings: { userSettingsAdapter },\n    } = useStore().getState();\n\n    const dispatch = useDispatch();\n\n    const [favourites, setFavourites] = useState(userFavourites);\n\n    const handleFavouriteChange = async ({\n        currentTarget: {\n            dataset: { value },\n        },\n    }) => {\n        let newFavourites = favourites || [];\n\n        if (newFavourites && newFavourites.indexOf(value) > -1) {\n            newFavourites = newFavourites.filter((item) => item !== value);\n        } else newFavourites.push(value);\n\n        dispatch({ type: LOADER });\n\n        const result = await userSettingsAdapter.changeFavourites(\n            newFavourites\n        );\n\n        dispatch({ type: LOADER });\n\n        if (result?.ok) {\n            dispatch({ type: SET_USER_FAVOURITES, payload: newFavourites });\n            setFavourites(newFavourites);\n        }\n    };\n\n    return (\n        <div className={\"contentContainer\"}>\n            <div className={\"row w-100 m-auto d-flex\"}>\n                <span className={\"tableHeader\"} />\n                <span className={\"tableHeader\"}>Name</span>\n                <span className={\"tableHeader m-auto\"}>Last Price</span>\n                <span className={\"tableHeader\"} />\n            </div>\n            <div className={\"d-flex w-100 m-auto flex-column\"}>\n                {data.map(({ name, rate }, key) => (\n                    <CategoryItem\n                        key={key}\n                        name={name}\n                        rate={rate}\n                        url={url}\n                        favourites={favourites}\n                        handleFavouriteChange={handleFavouriteChange}\n                    />\n                ))}\n            </div>\n            {/*{data.map(({ name, rate }, key) => (*/}\n            {/*<p key={key}>*/}\n            {/*{base} {moment.utc(createdAt).format(\"YYYY-MM-DD HH:mm:ss\")}{\" \"}*/}\n            {/*{moment.utc(date).format(\"YYYY-MM-DD HH:mm:ss\")}*/}\n            {/*<Link to={`${url}/${_id}`}>details</Link>*/}\n            {/*</p>*/}\n            {/*))}*/}\n        </div>\n    );\n};\n\nexport default Content;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport Content from \"../../../components/content\";\nimport { GET_CATEGORY_DATA } from \"../../../redux/actions\";\nimport Loader from \"../../../components/loader\";\n\nconst Category = (props) => {\n    const { model } = props;\n\n    const dispatch = useDispatch();\n    const { settings } = useStore().getState();\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        if (model?.shouldRefresh()) {\n            model.setRefresh(false);\n            dispatch({\n                type: GET_CATEGORY_DATA,\n                payload: {\n                    url: model.getAllUrl(settings?.base),\n                    category: model.getCategoryName(),\n                },\n            });\n        }\n    }, []);\n\n    useSelector(({ collections }) => {\n        const newData = collections[model?.getCategoryName()]?.data;\n\n        if (JSON.stringify(newData) !== JSON.stringify(data)) {\n            setData(newData);\n        }\n    });\n\n    return (\n        <div>\n            {model ? (\n                <>\n                    {data !== null ? (\n                        <>\n                            {data?.length > 0 ? (\n                                <Content {...props} data={data} />\n                            ) : (\n                                <p>No results..</p>\n                            )}\n                        </>\n                    ) : (\n                        <Loader />\n                    )}\n                </>\n            ) : (\n                <span>working on it..</span>\n            )}\n        </div>\n    );\n};\n\nexport default Category;\n"],"sourceRoot":""}