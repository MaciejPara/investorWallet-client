{"version":3,"sources":["App.js"],"names":["ViewWelcome","React","lazy","ViewApp","ViewError","ViewLogin","ViewLogout","ViewRegister","AuthRoute","Component","component","authUser","rest","basePath","render","props","to","pathname","state","from","location","App","useStore","getState","useState","setState","useSelector","user","className","fallback","basename","path","email","exact"],"mappings":"sKAWMA,EAAcC,IAAMC,MAAK,kBAAM,gCAC/BC,EAAUF,IAAMC,MAAK,kBAAM,gCAC3BE,EAAYH,IAAMC,MAAK,kBAAM,gCAC7BG,EAAYJ,IAAMC,MAAK,kBAAM,uDAC7BI,EAAaL,IAAMC,MAAK,kBAAM,gCAC9BK,EAAeN,IAAMC,MAAK,kBAAM,iCAEhCM,EAAY,SAAC,GAA2D,IAA9CC,EAA6C,EAAxDC,UAAsBC,EAAkC,EAAlCA,SAAuBC,GAAW,EAAxBC,SAAwB,oDACzE,OACI,kBAAC,IAAD,iBACQD,EADR,CAEIE,OAAQ,SAACC,GAAD,OACJJ,EACI,kBAACF,EAAcM,GAEf,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAS,SACTC,MAAO,CAAEC,KAAMJ,EAAMK,kBAgElCC,UAvDH,WAAO,IAAD,EAENR,EADMS,cAAWC,WACEZ,SAAnBE,SAFM,EAGYW,qBAHZ,mBAGPN,EAHO,KAGAO,EAHA,KAWd,OANAC,aAAY,YAA6B,IAAdC,EAAa,EAAzBhB,SAAYgB,KACnBA,KAAQ,OAACT,QAAD,IAACA,OAAD,EAACA,EAAOS,OAChBF,EAAS,CAAEE,YAKf,yBAAKC,UAAU,OACX,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,CAAQC,SAAS,0BACb,kBAAC,IAAD,KACI,kBAACtB,EAAD,CACIuB,KAAI,OACJpB,SAAQ,OAAEO,QAAF,IAAEA,GAAF,UAAEA,EAAOS,YAAT,aAAE,EAAaK,MACvBtB,UAAWP,EACXU,SAAUA,IAEd,kBAAC,IAAD,CACIoB,OAAK,EACLF,KAAI,SACJjB,OAAQ,SAACC,GAAD,OAAW,kBAACV,EAAcU,MAEtC,kBAAC,IAAD,CACIgB,KAAI,UACJE,OAAK,EACLnB,OAAQ,SAACC,GAAD,OAAW,kBAACT,EAAeS,MAEvC,kBAAC,IAAD,CACIgB,KAAI,YACJE,OAAK,EACLnB,OAAQ,SAACC,GAAD,OAAW,kBAACR,EAAiBQ,MAEzC,kBAAC,IAAD,CACIgB,KAAI,SACJE,OAAK,EACLnB,OAAQ,SAACC,GAAD,OAAW,kBAACX,EAAcW,MAEtC,kBAAC,IAAD,CACIgB,KAAI,IACJE,OAAK,EACLnB,OAAQ,SAACC,GAAD,OAAW,kBAACf,EAAgBe,MAExC,kBAAC,IAAD,CAAUC,GAAE","file":"static/js/App.9661aade.chunk.js","sourcesContent":["import React, { Suspense, useState } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\n\nimport Loader from \"./components/loader\";\nimport { useStore, useSelector } from \"react-redux\";\n\nconst ViewWelcome = React.lazy(() => import(\"./views\"));\nconst ViewApp = React.lazy(() => import(\"./views/app\"));\nconst ViewError = React.lazy(() => import(\"./views/error\"));\nconst ViewLogin = React.lazy(() => import(\"./views/login\"));\nconst ViewLogout = React.lazy(() => import(\"./views/logout\"));\nconst ViewRegister = React.lazy(() => import(\"./views/register\"));\n\nconst AuthRoute = ({ component: Component, authUser, basePath, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                authUser ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: `/login`,\n                            state: { from: props.location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nconst App = () => {\n    const store = useStore().getState();\n    const { basePath } = store.authUser;\n    const [state, setState] = useState();\n\n    useSelector(({ authUser: { user } }) => {\n        if (user && !state?.user) {\n            setState({ user });\n        }\n    });\n\n    return (\n        <div className=\"App\">\n            <Suspense fallback={<Loader />}>\n                <Router basename=\"/investorWallet-client\">\n                    <Switch>\n                        <AuthRoute\n                            path={`/app`}\n                            authUser={state?.user?.email}\n                            component={ViewApp}\n                            basePath={basePath}\n                        />\n                        <Route\n                            exact\n                            path={`/login`}\n                            render={(props) => <ViewLogin {...props} />}\n                        />\n                        <Route\n                            path={`/logout`}\n                            exact\n                            render={(props) => <ViewLogout {...props} />}\n                        />\n                        <Route\n                            path={`/register`}\n                            exact\n                            render={(props) => <ViewRegister {...props} />}\n                        />\n                        <Route\n                            path={`/error`}\n                            exact\n                            render={(props) => <ViewError {...props} />}\n                        />\n                        <Route\n                            path={`/`}\n                            exact\n                            render={(props) => <ViewWelcome {...props} />}\n                        />\n                        <Redirect to={`/error`} />\n                    </Switch>\n                </Router>\n            </Suspense>\n        </div>\n    );\n};\n\nexport default App;\n"],"sourceRoot":""}