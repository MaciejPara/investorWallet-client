{"version":3,"sources":["components/favourite/index.js","components/categoryItem/index.js","views/app/main/index.js"],"names":["Favourite","handleChange","name","state","className","data-value","onClick","CategoryItem","handleFavouriteChange","favourites","rate","url","indexOf","parseFloat","toFixed","to","MainAppView","match","useStore","getState","userFavourites","authUser","user","userSettingsAdapter","settings","dispatch","useDispatch","useState","setFavourites","favouritesRates","setFavouritesRates","useSelector","collections","base","foundRates","categories","forEach","item","el","found","data","find","push","length","initFlag","type","SET_INIT_FLAG","model","GET_CATEGORY_DATA","payload","getAllUrl","category","getCategoryName","JSON","stringify","a","value","currentTarget","dataset","newFavourites","LOADER","filter","changeFavourites","result","ok","SET_USER_FAVOURITES","map","key"],"mappings":"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","file":"static/js/7.9f80cd7f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Favourite = ({ handleChange, name, state = false }) => {\n    return (\n        <span className={\"cell\"} data-value={name} onClick={handleChange}>\n            {state ? (\n                <i className=\"fas fa-star favourite active\" />\n            ) : (\n                <i className=\"far fa-star favourite\" />\n            )}\n        </span>\n    );\n};\n\nexport default Favourite;\n","import FavouriteComponent from \"../favourite\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nconst CategoryItem = ({\n    handleFavouriteChange,\n    name,\n    favourites,\n    rate,\n    url,\n}) => {\n    return (\n        <div className={\"row w-100 m-auto d-flex\"}>\n            <FavouriteComponent\n                handleChange={handleFavouriteChange}\n                name={name}\n                state={favourites.indexOf(name) > -1}\n            />\n            <span className={\"cell\"}>{name}</span>\n            <span className={\"cell m-auto\"}>\n                {parseFloat(1 / rate).toFixed(2)}\n            </span>\n            <span className={\"cell\"}>\n                <Link to={`${url}`}>\n                    <i className=\"fas fa-ellipsis-h\" />\n                </Link>\n            </span>\n        </div>\n    );\n};\n\nexport default CategoryItem;\n","import React, { useState } from \"react\";\nimport { useDispatch, useStore, useSelector } from \"react-redux\";\nimport CategoryItem from \"../../../components/categoryItem\";\nimport {\n    GET_CATEGORY_DATA,\n    SET_INIT_FLAG,\n    SET_USER_FAVOURITES,\n    LOADER,\n} from \"../../../redux/actions\";\n\nconst MainAppView = ({ match: { url } }) => {\n    const {\n        authUser: {\n            user: { favourites: userFavourites },\n        },\n        settings: { userSettingsAdapter },\n    } = useStore().getState();\n\n    const dispatch = useDispatch();\n\n    const [favourites, setFavourites] = useState(userFavourites);\n    const [favouritesRates, setFavouritesRates] = useState([]);\n\n    useSelector(({ collections, settings: { base } }) => {\n        const foundRates = [];\n\n        collections.categories.forEach((item) => {\n            favourites.forEach((el) => {\n                const found = collections[item]?.data?.find(\n                    ({ name }) => name === el\n                );\n\n                if (found) {\n                    foundRates.push(found);\n                }\n            });\n        });\n\n        if (\n            favourites.length > 0 &&\n            favourites.length !== foundRates.length &&\n            !collections.initFlag\n        ) {\n            dispatch({\n                type: SET_INIT_FLAG,\n            });\n\n            collections.categories.forEach((item) => {\n                const model = collections[item]?.model;\n\n                dispatch({\n                    type: GET_CATEGORY_DATA,\n                    payload: {\n                        url: model.getAllUrl(base),\n                        category: model.getCategoryName(),\n                    },\n                });\n            });\n        }\n\n        if (JSON.stringify(foundRates) !== JSON.stringify(favouritesRates)) {\n            setFavouritesRates(foundRates);\n        }\n    });\n\n    const handleFavouriteChange = async ({\n        currentTarget: {\n            dataset: { value },\n        },\n    }) => {\n        let newFavourites = favourites || [];\n\n        dispatch({ type: LOADER });\n\n        if (newFavourites && newFavourites.indexOf(value) > -1) {\n            newFavourites = newFavourites.filter((item) => item !== value);\n        } else newFavourites.push(value);\n\n        const result = await userSettingsAdapter.changeFavourites(\n            newFavourites\n        );\n\n        dispatch({ type: LOADER });\n        if (result?.ok) {\n            dispatch({ type: SET_USER_FAVOURITES, payload: newFavourites });\n            setFavourites(newFavourites);\n        }\n    };\n\n    return (\n        <div>\n            <div className={\"contentContainer\"}>\n                <h4>Favourites:</h4>\n                {favourites.length > 0 ? (\n                    <>\n                        <div className={\"row w-100 m-auto d-flex\"}>\n                            <span className={\"tableHeader\"} />\n                            <span className={\"tableHeader\"}>Name</span>\n                            <span className={\"tableHeader m-auto\"}>\n                                Last Price\n                            </span>\n                            <span className={\"tableHeader\"} />\n                        </div>\n                        <div className={\"d-flex w-100 m-auto flex-column\"}>\n                            {favouritesRates.map(\n                                ({ name: item, rate }, key) => (\n                                    <CategoryItem\n                                        key={key}\n                                        name={item}\n                                        rate={rate}\n                                        url={url}\n                                        favourites={favourites}\n                                        handleFavouriteChange={\n                                            handleFavouriteChange\n                                        }\n                                    />\n                                )\n                            )}\n                        </div>\n                    </>\n                ) : (\n                    <p>No results...</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MainAppView;\n"],"sourceRoot":""}