{"version":3,"sources":["components/navbar/index.js","views/app/index.js","components/customSelect/index.js"],"names":["Navbar","url","match","useStore","getState","menu","items","current","dispatch","useDispatch","className","map","key","label","name","path","onClick","type","MENU_CHANGE","payload","to","length","FavouritesComponent","React","lazy","CategoryComponent","WalletComponent","InvestmentComponent","Views","props","collections","settings","useState","base","baseState","setBaseState","handleBaseChange","a","value","LOADER","userSettingsAdapter","changeBase","result","ok","categories","forEach","item","model","GET_CATEGORY_DATA","getAllUrl","category","getCategoryName","SET_SETTINGS","menuPlacement","defaultValue","baseOptions","find","options","handleChange","fallback","exact","render","CustomSelect","handleBlur","colourStyles","menuList","provided","state","paddingTop","paddingBottom","defaultStyles","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","borderRadius","color","input","singleValue","control","styles","isFocused","border","outline","dropdownIndicator","data","cursor","indicatorSeparator","option","isSelected","isSearchable","onChange","onBlur"],"mappings":"4MAqCeA,EAhCA,SAAC,GAAwB,IAAbC,EAAY,EAArBC,MAASD,IACvB,EAEIE,cAAWC,WADXC,KAAQC,EADZ,EACYA,MAAOC,EADnB,EACmBA,QAGbC,EAAWC,cAEjB,OACI,sBAAKC,UAAW,aAAhB,UACKJ,EAAMK,KAAI,WAAwBC,GAAxB,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAhB,OACP,cAAC,IAAD,CACIC,QAAS,WACLR,EAAS,CAAES,KAAMC,IAAaC,QAASL,KAG3CM,GAAE,UAAKnB,GAAL,OAAWc,GACbL,UAAS,UAAa,IAARE,EAAA,UAAwB,GAA7B,YACLA,IAAQN,EAAMe,OAAS,EAAvB,UAAuC,GADlC,YAELd,IAAYO,EAAO,cAAgB,GAF9B,KANb,SAUKD,GANID,MASb,qBAAKF,UAAW,kBAAhB,SACI,cAAC,IAAD,CAASU,GAAE,UAAX,SACI,mBAAGV,UAAU,gC,wBCnB3BY,EAAsBC,IAAMC,MAAK,kBAAM,kCACvCC,EAAoBF,IAAMC,MAAK,kBAAM,uDACrCE,EAAkBH,IAAMC,MAAK,kBAAM,sEACnCG,EAAsBJ,IAAMC,MAAK,kBAAM,+DA4F9BI,UA1FD,SAACC,GACX,IACa5B,EACT4B,EADA3B,MAASD,IAGPO,EAAWC,cACjB,EAAkCN,cAAWC,WAArC0B,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACrB,EAAkCC,mBAASD,EAASE,MAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAgB,uCAAG,+BAAAC,EAAA,0DAASC,EAAT,EAASA,SAChBJ,EADO,uBAEjB1B,EAAS,CAAES,KAAMsB,MAFA,SAGIR,EAASS,oBAAoBC,WAAWH,GAH5C,QAIjB,QADMI,EAHW,cAIjB,IAAIA,OAAJ,EAAIA,EAAQC,MACRb,EAAYc,WAAWC,SAAQ,SAACC,GAAU,IAAD,EAC/BC,EAAK,UAAGjB,EAAYgB,UAAf,aAAG,EAAmBC,MAEjCvC,EAAS,CACLS,KAAM+B,IACN7B,QAAS,CACLlB,IAAK8C,EAAME,UAAUX,GACrBY,SAAUH,EAAMI,wBAI5B3C,EAAS,CACLS,KAAMmC,IACNjC,QAAS,CAAEc,KAAMK,KAErBH,EAAaG,GACb9B,EAAS,CAAES,KAAMsB,OArBJ,2CAAH,sDA0BtB,OACI,sBAAK7B,UAAW,QAAhB,UACI,cAAC,EAAD,eAAYmB,IACZ,qBAAKnB,UAAW,qBAAhB,SACI,wCAEI,cAAC,IAAD,CACI2C,cAAe,MACfC,aAAcvB,EAASwB,YAAYC,MAC/B,qBAAGlB,QAAsBJ,KAE7BuB,QAAS1B,EAASwB,YAClBG,aAActB,SAK1B,cAAC,WAAD,CAAUuB,SAAU,cAAC,IAAD,IAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,OAAK,EACL7C,KAAI,UAAKd,EAAL,gBACJ4D,OAAQ,SAAChC,GAAD,OAAW,cAACF,EAAD,eAAyBE,OAEhD,cAAC,IAAD,CACI+B,OAAK,EACL7C,KAAI,UAAKd,EAAL,KACJ4D,OAAQ,SAAChC,GAAD,OAAW,cAACH,EAAD,eAAqBG,OAE5C,cAAC,IAAD,CACI+B,OAAK,EACL7C,KAAI,UAAKd,EAAL,eACJ4D,OAAQ,SAAChC,GAAD,OAAW,cAACP,EAAD,eAAyBO,OAdpD,OAiBKC,QAjBL,IAiBKA,OAjBL,EAiBKA,EAAac,WAAWjC,KAAI,SAACmC,EAAMlC,GAAP,OACzB,cAAC,IAAD,CAEIgD,OAAK,EACL7C,KAAI,UAAKd,EAAL,YAAY6C,GAChBe,OAAQ,SAAChC,GAAD,aACJ,cAACJ,EAAD,2BACQI,GADR,IAEIkB,MAAK,UAAEjB,EAAYgB,UAAd,aAAE,EAAmBC,WAN7BnC,MAWb,cAAC,IAAD,CAAUQ,GAAG,qB,kECalB0C,IA5GM,SAAC,GAOf,IANHJ,EAME,EANFA,aACAK,EAKE,EALFA,WACAT,EAIE,EAJFA,aACAG,EAGE,EAHFA,QACAJ,EAEE,EAFFA,cAEE,IADF3C,iBACE,MADU,GACV,EACIsD,EAAe,CACjBC,SAAU,SAACC,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,WAAY,EACZC,cAAe,KAEnBhE,KAAM,SAACiE,GACH,OAAO,2BACAA,GADP,IAEIC,gBAAiB,UACjBC,gBAAiB,wCACjBC,aAAc,wCACdC,UAAW,wCACXC,aAAc,EACdC,MAAO,UACP,SAAU,CACNJ,gBAAiB,0BACjBC,aAAc,0BACdC,UAAW,0BACXE,MAAO,cAInBC,MAAO,SAACP,GACJ,OAAO,2BACAA,GADP,IAEIM,MAAO,UACP,SAAU,CACNA,MAAO,cAInBE,YAAa,SAACR,GACV,OAAO,2BACAA,GADP,IAEIM,MAAO,UACP,SAAU,CACNA,MAAO,cAInBG,QAAS,SAACC,EAAD,KAAWC,UAAX,mBAAC,eACHD,GADE,IAELT,gBAAiB,cACjBW,OAAoB,oBACpBP,aAAc,EACdD,UAAW,OACX,SAAU,CACNQ,OAAQ,qBAEZC,QAAS,UAEbC,kBAAmB,SAACJ,EAAD,GAAsB,EAAXK,KAC1B,OAAO,2BACAL,GADP,IAEIJ,MAAO,OACPU,OAAQ,UACR,SAAU,CACNV,MAAO,cAInBW,mBAAoB,SAACP,GACjB,OAAO,2BACAA,GADP,IAEIT,gBAAiB,aAGzBiB,OAAQ,SAACR,EAAD,GAA6B,IAAlBS,EAAiB,EAAjBA,WACf,OAAO,2BACAT,GADP,IAEIT,gBAAiBkB,EAAa,mBAAqB,UACnDb,MAAOa,EAAa,UAAY,UAChCH,OAAQ,UACR,SAAU,CACNV,MAAO,UACPL,gBAAiB,WAErB,GAAI,CACAK,MAAO,UACPL,gBAAiB,eAMjC,OACI,cAAC,IAAD,CACImB,cAAc,EACdrC,cAAeA,GAAiB,OAChC3C,UAAS,2BAAsBA,GAC/B4C,aAAcA,EACdG,QAASA,EACTkC,SAAUjC,GAAgB,KAC1BkC,OAAQ7B,GAAc,KACtBiB,OAAQhB","file":"static/js/11.7aff1f71.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport { useStore, useDispatch } from \"react-redux\";\nimport { MENU_CHANGE } from \"../../redux/actions\";\n\nconst Navbar = ({ match: { url } }) => {\n    const {\n        menu: { items, current },\n    } = useStore().getState();\n\n    const dispatch = useDispatch();\n\n    return (\n        <nav className={\"navigation\"}>\n            {items.map(({ label, name, path }, key) => (\n                <NavLink\n                    onClick={() => {\n                        dispatch({ type: MENU_CHANGE, payload: name });\n                    }}\n                    key={key}\n                    to={`${url}${path}`}\n                    className={`${key === 0 ? `ml-auto` : \"\"} ${\n                        key === items.length - 1 ? `mr-auto` : \"\"\n                    } ${current === name ? \"activeClass\" : \"\"} `}\n                >\n                    {label}\n                </NavLink>\n            ))}\n            <div className={\"logoutContainer\"}>\n                <NavLink to={`/logout`}>\n                    <i className=\"fas fa-sign-out-alt\" />\n                </NavLink>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React, { Suspense, useState } from \"react\";\nimport { useStore, useDispatch } from \"react-redux\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Loader from \"../../components/loader\";\nimport Navbar from \"../../components/navbar\";\n\nimport CustomSelect from \"../../components/customSelect\";\nimport { GET_CATEGORY_DATA } from \"../../redux/collections/actions\";\nimport { SET_SETTINGS } from \"../../redux/settings/actions\";\nimport { LOADER } from \"../../redux/actions\";\n\nconst FavouritesComponent = React.lazy(() => import(\"./main\"));\nconst CategoryComponent = React.lazy(() => import(\"./category\"));\nconst WalletComponent = React.lazy(() => import(\"./wallet\"));\nconst InvestmentComponent = React.lazy(() => import(\"./investment\"));\n\nconst Views = (props) => {\n    const {\n        match: { url },\n    } = props;\n\n    const dispatch = useDispatch();\n    const { collections, settings } = useStore().getState();\n    const [baseState, setBaseState] = useState(settings.base);\n\n    const handleBaseChange = async ({ value }) => {\n        if (value !== baseState) {\n            dispatch({ type: LOADER });\n            const result = await settings.userSettingsAdapter.changeBase(value);\n            if (result?.ok) {\n                collections.categories.forEach((item) => {\n                    const model = collections[item]?.model;\n\n                    dispatch({\n                        type: GET_CATEGORY_DATA,\n                        payload: {\n                            url: model.getAllUrl(value),\n                            category: model.getCategoryName(),\n                        },\n                    });\n                });\n                dispatch({\n                    type: SET_SETTINGS,\n                    payload: { base: value },\n                });\n                setBaseState(value);\n                dispatch({ type: LOADER });\n            }\n        }\n    };\n\n    return (\n        <div className={\"views\"}>\n            <Navbar {...props} />\n            <div className={\"userSettingsFooter\"}>\n                <span>\n                    BASE\n                    <CustomSelect\n                        menuPlacement={\"top\"}\n                        defaultValue={settings.baseOptions.find(\n                            ({ value }) => value === baseState\n                        )}\n                        options={settings.baseOptions}\n                        handleChange={handleBaseChange}\n                    />\n                </span>\n            </div>\n\n            <Suspense fallback={<Loader />}>\n                <Switch>\n                    <Route\n                        exact\n                        path={`${url}/details/:id`}\n                        render={(props) => <InvestmentComponent {...props} />}\n                    />\n                    <Route\n                        exact\n                        path={`${url}/`}\n                        render={(props) => <WalletComponent {...props} />}\n                    />\n                    <Route\n                        exact\n                        path={`${url}/favourites`}\n                        render={(props) => <FavouritesComponent {...props} />}\n                    />\n\n                    {collections?.categories.map((item, key) => (\n                        <Route\n                            key={key}\n                            exact\n                            path={`${url}/${item}`}\n                            render={(props) => (\n                                <CategoryComponent\n                                    {...props}\n                                    model={collections[item]?.model}\n                                />\n                            )}\n                        />\n                    ))}\n                    <Redirect to=\"/error\" />\n                </Switch>\n            </Suspense>\n        </div>\n    );\n};\n\nexport default Views;\n","import React from \"react\";\nimport Select from \"react-select\";\n\n//@todo check warning bugs\nconst CustomSelect = ({\n    handleChange,\n    handleBlur,\n    defaultValue,\n    options,\n    menuPlacement,\n    className = \"\",\n}) => {\n    const colourStyles = {\n        menuList: (provided, state) => ({\n            ...provided,\n            paddingTop: 0,\n            paddingBottom: 0,\n        }),\n        menu: (defaultStyles) => {\n            return {\n                ...defaultStyles,\n                backgroundColor: \"#282c34\",\n                WebkitBoxShadow: \"0px 0px 3px 1px rgba(255,255,255,0.8)\",\n                MozBoxShadow: \"0px 0px 3px 1px rgba(255,255,255,0.8)\",\n                boxShadow: \"0px 0px 3px 1px rgba(255,255,255,0.8)\",\n                borderRadius: 0,\n                color: \"#ffffff\",\n                \":hover\": {\n                    WebkitBoxShadow: \"0px 0px 3px 1px #c0ff00\",\n                    MozBoxShadow: \"0px 0px 3px 1px #c0ff00\",\n                    boxShadow: \"0px 0px 3px 1px #c0ff00\",\n                    color: \"#c0ff00\",\n                },\n            };\n        },\n        input: (defaultStyles) => {\n            return {\n                ...defaultStyles,\n                color: \"#ffffff\",\n                \":hover\": {\n                    color: \"#c0ff00\",\n                },\n            };\n        },\n        singleValue: (defaultStyles) => {\n            return {\n                ...defaultStyles,\n                color: \"#ffffff\",\n                \":hover\": {\n                    color: \"#c0ff00\",\n                },\n            };\n        },\n        control: (styles, { isFocused }) => ({\n            ...styles,\n            backgroundColor: \"transparent\",\n            border: isFocused ? \"1px solid #c0ff00\" : \"1px solid #c0ff00\",\n            borderRadius: 0,\n            boxShadow: \"none\",\n            \":hover\": {\n                border: \"1px solid #c0ff00\",\n            },\n            outline: \"none\",\n        }),\n        dropdownIndicator: (styles, { data }) => {\n            return {\n                ...styles,\n                color: \"#fff\",\n                cursor: \"pointer\",\n                \":hover\": {\n                    color: \"#c0ff00\",\n                },\n            };\n        },\n        indicatorSeparator: (styles) => {\n            return {\n                ...styles,\n                backgroundColor: \"#c0ff00\",\n            };\n        },\n        option: (styles, { isSelected }) => {\n            return {\n                ...styles,\n                backgroundColor: isSelected ? \"rgb(170, 240, 0)\" : \"#282c34\",\n                color: isSelected ? \"#282c34\" : \"#c0ff00\",\n                cursor: \"pointer\",\n                \":hover\": {\n                    color: \"#282c34\",\n                    backgroundColor: \"#c0ff00\",\n                },\n                \"\": {\n                    color: \"#282c34\",\n                    backgroundColor: \"#c0ff00\",\n                },\n            };\n        },\n    };\n\n    return (\n        <Select\n            isSearchable={false}\n            menuPlacement={menuPlacement || \"down\"}\n            className={`baseOptionSelect ${className}`}\n            defaultValue={defaultValue}\n            options={options}\n            onChange={handleChange || null}\n            onBlur={handleBlur || null}\n            styles={colourStyles}\n        />\n    );\n};\n\nexport default CustomSelect;\n"],"sourceRoot":""}